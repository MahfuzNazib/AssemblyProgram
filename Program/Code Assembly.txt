;**BINARY TO HEXA
======================

.MODEL SMALL
.STACK 100H
.DATA
     STR DB 0AH,0DH,'Illegal Input. $'
.CODE

MAIN PROC
 
    MOV AX,@DATA
    MOV DS,AX
 
    MOV BX,0
    MOV CL,1
 
    TOP:
       MOV AH,1            ; INPUT CHARACTER
       INT 21H             ; COMPARE IS CR OR NOT
       CMP AL,0DH          ; IF EQUAL JUMP TO END IF NO THAN CONTINUE
       JE END_
     
       CMP AL,30H          ; COMPARE AL CONTAIN 0 OR NOT
       JNE CHECK           ; IF NO GOTO CHECK

       CONTINUE:
           SUB AL,30H      ;SUBTRACT 30H AND PUT INTO AL
                           ;
           SHL BX,CL       ; SHIFT BX LEFT 1 TIME
           OR BL,AL        ; OR BL AND AL

       JMP TOP
    CHECK:
        CMP AL,31H         ;COMPARE AL CONTAIN 1 OR NOT
        JNE MSG            ; IF NO GOTO MSG
        JMP CONTINUE       ; IF YES THAN GOTO CONTINUE
    END_:  
 
    MOV AH,2               ;
    MOV DL,0AH             ;
    INT 21H                ;NEW LINE
    MOV DL,0DH             ;
    INT 21H
 
    MOV CL,1
    MOV CH,0
    OUTPUT:
          CMP CH,4         ;COMPARE CH IS EQUAL 4
          JE FINISH        ;IF YES GOTO FINISH
          INC CH           ;INCREMENT CH
       
          MOV DL,BH        ;MOVE BH TO DL
          SHR DL,4         ;SHIFT DL 4 TIMES IN THE RIGHT
       
          CMP DL,0AH       ;COMPARE DL < 10
          JL DIGIT         ;IF YES GOTO DIGIT
       
          ADD DL,37H       ;ADD DL WITH 37h
          MOV AH,2         ;
          INT 21H          ;PRINTING DL
          ROL BX,4         ;ROTATE BX LEFT 4 TIMES
          JMP OUTPUT       ;JUMP TO OUTPUT
       
    DIGIT:
        ADD DL,30H         ;ADD DL WITH 30h
        MOV AH,2
        INT 21H            ;PRINTING DL
        ROL BX,4           ;ROTATE BX LEFT 4 TIMES
        JMP OUTPUT         ;JUMP TO OUTPUT
    MSG:
        MOV AH,9           ;
        LEA DX,STR         ;ILLEGAL MSG
        INT 21H            ;
     
    FINISH:  
    MOV AH,4CH
    INT 21H
           
   
    MAIN ENDP
END MAIN 


;**HEXA TO BINARY
======================
===================hexa to binary===========



.MODEL SMALL
.STACK 100H
.DATA
    MSG1 DB '(1)-> 8 BIT BAINARY   (2)-> 16BIT BINARY $'
    MSG2 DB 0DH,0AH,'ENTER YOUR OPTION : $'
    MSG3 DB 0DH,0AH,'INVALID KEY PRESS $'
    MSG4 DB 0DH,0AH,'ENTER 4 BIT HEXA VALUE : $'
    MSG5 DB 0DH,0AH,'ENTER 8 BIT HEXA VALUE : $'
    MSG6 DB 0DH,0AH,'CONVERTED BIANRY VALUE : $'
.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX
    
    MOV AH,9
    LEA DX,MSG1
    INT 21H
    
    LEA DX,MSG2
    INT 21H
    
    MOV AH,1
    INT 21H
    
    CMP AL,'1'
    JE B8
    
    CMP AL,'2'
    JE B16
    
    JMP INVALID
    
    B8:
        MOV AH,9
        LEA DX,MSG4
        INT 21H
        
        XOR BL,BL
        
        INPUT:
            MOV AH,1
            INT 21H
        
            CMP AL,0DH
            JE FINISH
            
            CMP AL,41H
            JGE LETTER
            
            CMP AL,30H
            JGE DIGIT
            
            LETTER:
            
                CMP AL,46H
                JLE LOK
                JMP INVALID
                
                LOK:
                    SUB AL,37H
                    SHL BL,4
                    OR BL,AL
                    
                    JMP INPUT
                    
            
            DIGIT:
                
                CMP AL,39H
                JLE DOK
                JMP INVALID
                
                DOK:
                    SUB AL,30H
                    SHL BL,4
                    OR BL,AL
                    
                    JMP INPUT
                 
            
            FINISH:
            
                MOV DL,0
                MOV CH,0
                MOV DL,BL
                
                MOV AH,9
                LEA DX,MSG6
                INT 21H
                
                OUTPUT:
                    CMP CH,8
                    JE EXIT
                    INC CH
                    
                    SHL BL,1
                    JC ONE
                    JMP ZERO
                    
                    ONE:
                        MOV AH,2
                        MOV DL,'1'
                        INT 21H  
                        
                        LOOP OUTPUT
                    
                    ZERO:
                        MOV AH,2
                        MOV DL,'0'
                        INT 21H
                        
                        LOOP OUTPUT
                        
                       
                            
                        EXIT:
                            MOV AH,4CH
                            INT 21H
                            
 
    B16:
    
        MOV AH,9
        LEA DX,MSG5
        INT 21H
        
        XOR BX,BX
        
        INPUT1:
            MOV AH,1
            INT 21H
            
            CMP AL,0DH
            JE FINISH1
            
            CMP AL,41H
            JGE LETTER1
            
            CMP AL,30H
            JGE DIGIT1
            
            LETTER1:
            
                CMP AL,46H
                JLE LOK1
                JMP INVALID
                
                LOK1:
                    SUB AL,37H
                    SHL BX,4
                    OR BL,AL
                    
                    JMP INPUT1
                    
            
            DIGIT1:
                
                CMP AL,39H
                JLE DOK1
                JMP INVALID
                
                DOK1:
                    SUB AL,30H
                    SHL BX,4
                    OR BL,AL
                    
                    JMP INPUT1
                 
            
            FINISH1:
            
                MOV DL,0
                MOV CX,0
                MOV DL,BL
                
                MOV AH,9
                LEA DX,MSG6
                INT 21H
                
                OUTPUT1:
                    CMP CX,16
                    JE EXIT1
                    INC CX
                    
                    SHL BX,1
                    JC ONE1
                    JMP ZERO1
                    
                    ONE1:
                        MOV AH,2
                        MOV DL,'1'
                        INT 21H  
                        
                        JMP OUTPUT1
                    
                    ZERO1:
                        MOV AH,2
                        MOV DL,'0'
                        INT 21H
                        
                        JMP OUTPUT1
                        
                        
                            
                        EXIT1:
                            MOV AH,4CH
                            INT 21H
    
    
    
    INVALID:
        MOV AH,9
        LEA DX,MSG3
        INT 21H
                            
       
       
       MOV AH,4CH
       INT 21H 
       
       MAIN ENDP
END MAIN



